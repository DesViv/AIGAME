// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
namespace Completed
{
    /*
    Describes the motion taken. AIActions are created in the AI scripts, but are processed in the game manager. Everything is public because it is more like a C Struct than a class.
    */
    public class AIAction
    {
        public Enemy obj;//Object to perform action.
        public enum Actions
        {
            Move,Attack//List of actions
        }
        public Actions action;//Which action to do.
        public Vector3 pos;

        public AIAction(Enemy o,Actions a,Vector3 p)
        {
            obj = o;
            action = a;
            pos = p;
        }
    }
  /*
  The base class of an AI script. All AI scripts extend from this class. When a player enters the AI select screen the scripts are complied and linked against this class. In the game manager this AIBase class is used as an interface for handling the AI movements.
  */
	public abstract class AIBase
	{
        public String description="";// Not used, but is a description of the AI script
        public int Count
        {
            set { }
            get { return self.Count; } //Return how many units there are, used in an older version
        }
        public int mode; //0 = PvP, 1 = PvE, 2 = EvE
        public List<MovingObject> other; //Other players units
        public List<Enemy> self; //This AI Players Units
        protected List<AIAction> actions; //The actions to perform at the end of the turn.
        public List<AIAction> acts
        {
            set { }
            get { return actions; }
        }
        /*
        Virtual method to define AI behavior on turn. This should be overriden in child classes.
        This mehtod is called at the start of the turn of an AI player.
        */
        public virtual void onTurn()
        {
            actions = new List<AIAction>();
        }
        /*
        Initalizes the AIplayers unit positions and other players unit positions on the start of the turn. This is called before onTurn. This method does not need to be overridden, and infact shouldnt be.
        */
        public void init(List<Enemy> s,List<MovingObject> o)
        {
            self = s;
            other = o;
            actions = new List<AIAction>();
        }
	}
}
