// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using Completed;
using System;

public class LowestHealth : AIBase
{ //This agent chases the lowest health enemy
	public override void onTurn()
	{
		base.onTurn ();
		foreach (Enemy e in self) { //this agent finds the closest enemy with the lowest health
			Vector3 cur = e.currentPos;
			MovingObject closest = null;
			float closestDistance = 99999999;
			foreach (MovingObject obj in other) {
				float distance = Mathf.Sqrt (Mathf.Pow ((obj.transform.position.x - cur.x), 2) + Mathf.Pow ((obj.transform.position.y - cur.y), 2));
				if (closest == null) {
					closest = obj;
					closestDistance = distance;
				} else {
					if (distance < closestDistance) {
						closest = obj;
						closestDistance = distance;
					}
				}
			}
			int xDir = 0;
			int yDir = 0;
			bool xComparison = Mathf.Abs(closest.transform.position.x - cur.x) < float.Epsilon;
			bool yComparison = Mathf.Abs(closest.transform.position.y - cur.y) < float.Epsilon;
			if (xComparison && yComparison) //this will attack the agent if its close
			{
				actions.Add(new AIAction(e, AIAction.Actions.Attack, closest.transform.position));
			}
			else //moves to get close to the agent
			{
				if (xComparison)
				{
					yDir = closest.transform.position.y > cur.y ? 1 : -1;
				}
				else
				{
					xDir = closest.transform.position.x > cur.x ? 1 : -1;
				}
				actions.Add(new AIAction(e, AIAction.Actions.Move, cur + new Vector3(xDir, yDir, 0)));
			}

		}
	}
}
